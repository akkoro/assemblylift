# AssemblyLift Service
# Name: {{name}}

variable project_name {
    type = string
}

variable project_path {
    type = string
}

variable service_name {
    type = string
}

terraform {
    required_providers {
        aws = {
            source  = "hashicorp/aws"
            version = "~> 5.0"
        }
    }
}

resource aws_lambda_layer_version asml_runtime {
    provider = aws

    filename   = "${var.project_path}/.asml/runtime/bootstrap.zip"
    layer_name = "asml-${var.project_name}-${var.service_name}-lambda-runtime"

    source_code_hash = filebase64sha256("${var.project_path}/.asml/runtime/bootstrap.zip")
}

{{#if has_iomods}}resource aws_lambda_layer_version asml_iomods {
    provider = aws

    filename   = "${var.project_path}/.asml/runtime/${var.service_name}-iomods.zip"
    layer_name = "asml-${var.project_name}-${var.service_name}-iomods"

    source_code_hash = filebase64sha256("${var.project_path}/.asml/runtime/${var.service_name}-iomods.zip")
}{{/if}}

{{#if has_ruby}}resource aws_lambda_layer_version asml_ruby {
    provider = aws

    filename   = "${var.project_path}/net/runtime/ruby/3.3.0-dev/ruby-wasm32-wasi.zip"
    layer_name = "asml-${var.project_name}-${var.service_name}-ruby"

    source_code_hash = filebase64sha256("${var.project_path}/net/runtime/ruby/3.3.0-dev/ruby-wasm32-wasi.zip")
}{{/if}}

{{#if has_large_payloads}}resource aws_s3_bucket asml_functions {
    provider = aws
    bucket   = "asml-${var.project_name}-${var.service_name}-functions"
}
resource aws_s3_bucket_acl functions {
    provider = aws
    bucket   = aws_s3_bucket.asml_functions.id
    acl      = "private"
}{{/if}}

{{#each functions}}
module asml_function_{{this.name}} {
    source = "./functions/{{this.name}}/infra"

    project_name        = var.project_name
    project_path        = var.project_path
    service_name        = var.service_name
    function_name       = "{{this.name}}"
    handler_name        = "{{this.handler_name}}"
    runtime_environment = "{{this.runtime_environment}}"
    {{#if this.has_large_payload}}payload_bucket = aws_s3_bucket.asml_functions.id{{/if}}
    
    timeout  = {{this.timeout}}
    size     = {{this.size}}
    {{#if this.environment_variables}}env_vars = {
        {{#each this.environment_variables}}{{@key}} = "{{this}}",
        {{/each}}
    }{{/if}}

    runtime_layer_arn = aws_lambda_layer_version.asml_runtime.arn
    {{#if has_iomods}}iomod_layer_arn   = aws_lambda_layer_version.asml_iomods.arn{{/if}}
    {{#if has_ruby}}ruby_layer_arn    = aws_lambda_layer_version.asml_ruby.arn{{/if}}
}
{{/each}}
